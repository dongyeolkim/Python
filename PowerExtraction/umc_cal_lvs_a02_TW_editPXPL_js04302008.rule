//////////////////////////////////////////////////////////////////////////////////
// UMC Proprietary Data                                                 	//
//                                                                      	//
//   Title    : 0.13 um CMOS Image Sensor 1.5 V/3.3 V 2P4M 			//
//   Document : G-02-CMOS_SENSOR13-1.5V/3.3V-2P4M-MMC/AL_USG-EDR-8F		//
//		Ver T.D_PB Date 09/15/2006					// 
//       	G-03-CMOS_SENSOR13-1.5V/3.3V-2P4M-MMC/AL_USG-TLR-8F		//
//		Ver T.C_PB Date 09/04/2006					// 
//		G-05-CMOS_SENSOR13-1.5V/3.3V-MMC-SPICE-8F 			//
//		ver. T.E_PB Date 09/28/2006					//
//   Copyright (c) United Microelectronics Corporation, 1980-2006       	//
//   All Rights Reserved                                                	//
//                                                                      	//
//   This source file is proprietary information of United              	//
//   Microelectronics Corporation.  It may not be distributed,          	//
//   in whole or in any part without prior written permission.          	//
//                                                                      	//
// DISCLAIMER OF WARRANTY                                               	//
//   United Microelectronics Corporation information and associated     	//
//   files  are  provided  "as is"  and  without  warranty.  United     	//
//   Microelectronics Corporation has no obligation to support or       	//
//   otherwise  maintain  software.  United  Microelectronics           	//
//   Corporation makes no warranties,  expressed or  implied, with      	//
//   respect to the information contained herein, including, but        	//
//   not limited to, any warranty of merchantability or fitness         	//
//   for a particular application.                                      	//
//                                                                      	//
// LIMITATION OF LIABILITY                                              	//
//   United Microelectronics Corporation is not liable for any          	//
//   property  damage,  personal  injury, loss of  profits,             	//
//   interruption of  business, or for any other special,               	//
//   consequential or incidental damages, however caused, whether       	//
//   for breach of warranty, contract tort (including negligence),      	//
//   strict liability or otherwise. United Microelectronics             	//
//   Corporationfurther further assumes no responsibility for any       	//
//   errors that may appear within this set of files for any            	//
//   damages, direct or indirect, that may result from using this       	//
//   document.                                                          	//
//                                                                      	//
// HISTORY                                                              	//
//==============================================================================//
// T.D-PB 10/03/2006    Eric Chang						//
//			1.Modify the device name from PIPCAPS_SP to PIPCAPS_30F_CIS //
//			2.Modify Ca of PIPCAPS_30F_CIS from 3E-3 to 3.5E-3      //
//			3.Modify the device name from RNHR_WG20_SP to RNHR1000_WG20_MM//
//			4.Add N_BPW_15_MM,N_BPW_33_MM,N_LVCL_18_CIS,N_RVTCL_18_CIS //
//			5.Modify the device name from N_NVT_15_SP to N_NVT_15_MM //
//			6.Modify the device name from N_NVT_33_SP to N_NVT_33_MM //
//			7.Add the Capacitor options				//
// T.B-PC 05/23/2006    Deborah Huang						//
//			1.Add Device pin name					//
//			2.Add "TRACE PROPERTY Q A A 3" for BJT			//
//			3.Modify the DIONW device definition			//
//			4.Modify the MOSPROP for PEXRUN				//
// T.B-PB 04/04/2006    Eric Chang Update	//
//				1.Change the following device names , RSND_SP,RSPD_SP,RSNPO_SP,RSPPO_SP,RNPD_SP
//                                  to RSND,RSPD,RSNPO,RSPPO,RNPD
//				2.Modify  R = 488.8*W/(W-0.5e-6) to  R = 488.8*L/(W-0.5e-6)
//				3.Remove this operation : DNDIOD:6  = DNDIOD:5 NOT SAB
//				4.Add the following operations for PIPCAPS_SP
//					Cp = 3.25e-10      // F/M, fF/um=1e-9F/M
//					C = Ca * area(PIPCAP_SP) + Cp * ( L + W ) * 2 
//                              5.Change PTAP    = PSD AND PSUB   to   PTAP    = (PSD NOT SEALRMARK) AND PSUB
//				6.Add option "LVS ABORT ON SOFTCHK YES".
//				7.Add NOTES(10).
// T.A-PD 01/16/2006    Eric Chang Update	//
//				1.Add P_L315_SP,N_PG315_SP,N_PD315_SP
//				2.Add the following commands to check if improper butting contacts exist. 
//				NNBDIF  = NSD_C    TOUCH  PSD_C
//				PPBDIF  = PSD_C    TOUCH  NSD_C
//				NPBDIF  = NNBDIF OR PPBDIF
//				SCONNECT NSD_C NPBDIF BY NNBDIF
//				SCONNECT PSD_C NPBDIF BY PPBDIF
//				LVS SOFTCHK NPBDIF CONTACT
// T.A-PC 08/26/2005    Deborah Huang						//
//			1.Rename RNND_WG10_SP to RNND_SP			//
//			2.Modify MIMCAPS_SP to MIMCAPS_MM			//
//			3.Modify RNND_SP RNNPO_WG20_SP RNPPO_WG20_SP RNPPO_WS20_SP to 3terminals//
// T.A-PB 07/13/2005    Deborah Huang						//
//			new create						//
//////////////////////////////////////////////////////////////////////////////////
// NOTES ( Important, Read Me First )                               	//
//====================================                              	//
// 1. LVS files are provided as working templates.                  	//
//    Some modification may be required for additional devices or   	//
//    recognition/construction issues.                              	//
// 2. This file is created by Calibre v2004.4_8.14.1_5.5	        //
// 3. If users have special layout, please modify the command file  	//
//    according to layout.                                          	//
// 4. The parameters of resistors have to be changed according to   	//
//    their layout width. Designers can discuss this with product   	//
//    engineers.                                                    	//
// 5. Netlist elements include 					    	//
//    a. MOS elements :                                             	//
//	MIXED_MODE							//
//       - 1.5V Twin Well MOS device (N_15_SP/P_15_SP)               	//
//       - 3.3V Twin Well MOS device (N_33_SP/P_33_SP)               	//
//       - 1.5V TWell MOS device (N_BPW_15_MM)               		//
//       - 3.3V TWell MOS device (N_BPW_33_MM)            		//
//       - 1.5V_1.8VOD Low Vt MOS device (N_LVCL_18_CIS)             	//
//       - 1.5V_1.8VOD Regular Vt MOS device (N_RVTCL_18_CIS)           //  
//	 - 1.5V Native Vt NMOS  (N_NVT_15_MM)				//
//	 - 3.3V Native Vt NMOS  (N_NVT_33_MM)               		//
//       - 1.5V Low Vt MOS device (N_LV_15_CIS/P_LV_15_CIS)             //
//       - 3.3V Low Vt MOS device (N_LV_33_CIS/P_LV_33_CIS)             //
//	 - 1.5V 6T 3.15um^2 RAM CELL(MARK LAYER 95(0))		    	//
//		P LOAD		(P_L315_SP)				//
//		N PASS GATE 	(N_PG315_SP)				//
//		N PULL DOWN	(N_PD315_SP)				//
//    b. Resistor elements :                                        	//
//    * Salicide                                                    	//
//       . N-Well Sheet Res  (RSNWELL)                              	//
//       . N+ Sheet Res      (RSND)                                 	//
//       . P+ Sheet Res      (RSPD)                                 	//
//       . N+ Poly Sheet Res (RSNPO)                                	//
//       . P+ Poly Sheet Res (RSPPO)                                	//
//    * Non-Salicide                                                	//
//       . N+ Sheet Res      (RNND_SP)                             	//
//       . P+ Sheet Res      (RNPD)                                 	//
//       . N+ Poly Sheet Res (RNNPO_WG20_SP)                            //
//       . P+ Poly sheet Res (RNPPO_WG20_SP)				//
//       . P+ Poly sheet Res (RNPPO_WS20_SP)				//
//       . HR Ploy Sheet resistor (RNHR1000_WG20_MM)			//
//    c. Diode elements :                                           	//
//       . P+/N-Well Diode (DIOP_SP)                               	//
//       . N+/P-Well Diode (DION_SP)                                 	//
//    d. Sensor Diode elements :                                        //
//    * Without Micorlens						//
//	 . Bright Diode(w/o RGB)      (DION_WM_BRIGHT)			//
//	 . Red Diode                  (DION_WM_RED)			//
//	 . Green Diode                (DION_WM_GREEN)			//
//	 . Blue Diode                 (DION_WM_BLUE)			//
//    * With Micorlens							//
//	 . Bright Diode(w/o RGB)      (DION_ML_BRIGHT)			//
//	 . Red Diode                  (DION_ML_RED)			//
//	 . Green Diode                (DION_ML_GREEN)			//
//	 . Blue Diode                 (DION_ML_BLUE)			//
//    e. BJT                                                        	//
//       . EA=3x3um^2 PNP Bipolar Transistor (PNP_V30X30_SP)		//
//	 . EA=5X5um^2 PNP Bipolar Transistor (PNP_V50X50_SP)            //
//       . EA=10X10um^2 PNP Bipolar Transistor (PNP_V100X100_SP)        //
//    f. Capacitor							//
//       . MMC Capacitor (MIMCAPS_MM) 	                		//
//       . PIP Capacitor (PIPCAPS_30F_CIS)
// 6.This LVS has 2 metal options - 2P4M(default),2P3M.			//
//   Removing double slashes ahead of #DEFINE TOP_METAL_ME4        	//
//   switches the LVS to 2P4M, and so on.				//
// 7.Warning! Do not turn on 2 or more metal options at the same	//
//   time. If do that, a fatal error can occur.				//
// 8.If customers want to check ERC PATHCHK, please remove the comment  //
//   of slashes.							//
// 9.Customers should revise the name of "runset.tec" to the correct    //
//   LPE file name, and turn on PEXRUN,INCLUDE while running LPE file   //
// 10.If customers would like to stop running when the tool detects the error in softcheck, 
//   please turn on the option: "LVS ABORT ON SOFTCHK YES"
//////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
//                                                                      /
// Warning!     (1)Do not turn on 2 or more metal options at the same   /
//              time. If do that, a fatal error can occur.              /
/////////////////////////////////////////////////////////////////////////

//#DEFINE TOP_METAL_ME3
#DEFINE TOP_METAL_ME4

//#DEFINE POST_OPC	// TO RUN POST OPC DATABASE
#DEFINE PRE_OPC	// TP RUN PRE OPC DATABASE

				//////////////////////////////////////////////////
//#DEFINE PEXRUN                // TO RUN RC, Please turn on it.		//
//INCLUDE "./runset.tec"        // To RUN RC, Please include the tech file	//
				//////////////////////////////////////////////////

//SOURCE PATH      "/Project/lvslpe/deborah/GDS/mimcap2.cdl"
//SOURCE PRIMARY   "mimcap2"
SOURCE SYSTEM    SPICE

//LAYOUT PATH      "/Project/lvslpe/deborah/GDS/mimcap2.gds"
//LAYOUT PRIMARY   "mimcap2"
LAYOUT SYSTEM    GDSII

//LVS REPORT       lvs_test.rep

UNIT LENGTH                        U
UNIT CAPACITANCE                   FF
UNIT RESISTANCE                    OHM
UNIT TIME                          US

PRECISION                          1000
RESOLUTION                         1

#IFDEF PEXRUN
MASK SVDB DIRECTORY svdb XRC
ALLGATES = DIFF AND PO1
CONNECT ALLGATES PLY_C
MMC_DUMMY = COPY CMMC_SP
CONNECT MMC_DUMMY CMMC_SP
#ELSE // For RVE Purpose 
MASK SVDB DIRECTORY svdb QUERY 
#ENDIF

////////////////////////////////////////
//   Map TEXT layer to port names  
////////////////////////////////////////
TEXT DEPTH PRIMARY
//TEXT LAYER    85
//LABEL ORDER TOP_M SEC_LAST_MET ME2 ME1 PLY //for top meal is ME7

// Please change following ground and power name as in your design
//VIRTUAL CONNECT COLON YES
//VIRTUAL CONNECT NAME ?VSS? ?VDD? V3IO V0IO VAS VAD  GND VCC

LVS POWER  NAME                  ?VDD? ?VCC? vc
LVS GROUND NAME                  ?VSS? ?GND?

//////////////////////////////////
//  LVS Setup Options
//////////////////////////////////

LVS INJECT LOGIC                   NO
LVS ALL CAPACITOR PINS SWAPPABLE   YES
LVS IGNORE PORTS                   NO

LVS RECOGNIZE GATES                NONE //CALIBRE tool default is ALL
//LVS RECOGNIZE GATES                ALL //CALIBRE tool default is ALL
LVS REDUCE SPLIT GATES             YES
LVS CHECK PORT NAMES               YES //CALIBRE tool default is NO
LVS COMPARE CASE                   NO
LVS REPORT OPTION                  A B C D S
LVS REPORT MAXIMUM                 1000

LVS SPICE REPLICATE DEVICES YES
//LVS REDUCE C(PIPCAPS_30F_CIS) PARALLEL NO
LVS REDUCE C(PIPCAPS_30F_CIS) PARALLEL YES
LVS REDUCE C(MIMCAPS_MM) PARALLEL NO
LVS REDUCE PARALLEL BIPOLAR        YES
LVS REDUCE PARALLEL CAPACITORS     YES
LVS REDUCE PARALLEL DIODES         YES
LVS REDUCE PARALLEL MOS            YES
LVS REDUCE PARALLEL RESISTORS      YES
LVS REDUCE SERIES CAPACITORS       YES
LVS REDUCE SERIES RESISTORS        YES
LVS ABORT ON SUPPLY ERROR          NO
//LVS ABORT ON SOFTCHK 		   YES

LVS PUSH DEVICES	YES
//LVS PUSH DEVICES SEPARATE PROPERTIES


//LVS FILTER UNUSED OPTION           AB RC RE RG RB YB // Calibre tool default is NO
//LVS FILTER UNUSED MOS              YES  // Calibre tool default is NO
//LVS FILTER UNUSED BIPOLAR          YES  // Calibre tool default is NO
//LVS FILTER UNUSED CAPACITORS       YES  // Calibre tool default is NO
//LVS FILTER UNUSED DIODES           YES  // Calibre tool default is NO
//LVS FILTER UNUSED RESISTORS        YES  // Calibre tool default is NO

LVS EXPAND UNBALANCED CELLS        YES

//FLAG NONSIMPLE                     YES
//FLAG ACUTE                         YES
//FLAG OFFGRID                       YES
//FLAG SKEW                          YES

///////////////////////////
// ERC
///////////////////////////
ERC RESULTS DATABASE  "calibre_erc.db" ASCII
//ERC SUMMARY REPORT "erc_test.rep"
ERC MAXIMUM RESULTS 1000

ERC SELECT CHECK WRONG_NTAP WRONG_PTAP WRONG_TTAP WRONG_FLOATING_NTAP WRONG_FLOATING_PTAP WRONG_FLOATING_TTAP WRONG_FLOATING_POLY

WRONG_NTAP{@Check NTAP WITH WRONG TEXT ?VSS? ?GND? EXCEPT DIODE and BJT
        (NET NTAP ?VSS? ?GND?) NOT INTERACT ((DSYMBOL OR BJTSYMBOL)OR NWR)
}
WRONG_PTAP{@Check PTAP WITH WRONG TEXT ?VDD? ?VCC? EXCEPT DIODE and BJT
        (NET PTAP ?VDD? ?VCC?) NOT INTERACT (DSYMBOL OR BJTSYMBOL)
}
WRONG_TTAP{@Check TTAP WITH WRONG TEXT ?VDD? ?VCC? EXCEPT DIODE and BJT
        (NET TTAP ?VDD? ?VCC?) NOT INTERACT (DSYMBOL OR BJTSYMBOL)
}

WRONG_FLOATING_NTAP{@Check NTAP WITHOUT TEXT ?VDD? ?VCC? ?VSS? ?GND? EXCEPT DIODE and BJT
        (NOT NET NTAP ?VDD? ?VCC? ?VSS? ?GND?) NOT INTERACT ((DSYMBOL OR BJTSYMBOL)OR NWR)
}
WRONG_FLOATING_PTAP{@Check PTAP WITHOUT TEXT ?VDD? ?VCC? ?VSS? ?GND? EXCEPT DIODE and BJT
        (NOT NET PTAP ?VSS? ?GND? ?VDD? ?VCC?) NOT INTERACT (DSYMBOL OR BJTSYMBOL)
}
WRONG_FLOATING_TTAP{@Check TTAP WITHOUT TEXT ?VDD? ?VCC? ?VSS? ?GND? EXCEPT DIODE and BJT
        (NOT NET TTAP ?VSS? ?GND? ?VDD? ?VCC?) NOT INTERACT (DSYMBOL OR BJTSYMBOL)
}

WRONG_FLOATING_POLY{@Check POLY WITHOUT TEXT ANY LABELED NET
	PATHCHK !LABELED PLY_C 
}

//output short information xxx.shorts
LVS ISOLATE SHORTS                 YES

// Result of LVS soft check go to <svdb.dir>/topcell.softchk
LVS SOFTCHK WELL                    CONTACT
LVS SOFTCHK WEL                    CONTACT
LVS SOFTCHK PSUB                   CONTACT
LVS SOFTCHK TWEL                  CONTACT
LVS SOFTCHK NPBDIF CONTACT

// Result of ERC PATHCHK go to <svdb.dir>/topcell.pathchk.erc
// If customers want to check it, please trun on it.
//ERC PATHCHK GROUND && !POWER
//ERC PATHCHK POWER  && !GROUND
//ERC PATHCHK !POWER && !GROUND
//ERC PATHCHK !LABELED
#IFDEF PEXRUN
DMACRO MOSPROP DEVICELAYER PIN AUXLAYER{
[Property W,L,AD,AS,PD,PS
W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2
L=AREA(DEVICELAYER)/W
IN_D=PERIMETER_INSIDE(D,AUXLAYER)
IN_S=PERIMETER_INSIDE(S,AUXLAYER)
IF(IN_S==0){
AD=AREA(D)* W/IN_D
PD=PERIMETER(D)* W/IN_D
AS=AD
PS=PD
}
ELSE
IF(IN_D==0){
AS=AREA(S)* W/IN_S
PS=PERIMETER(S)* W/IN_S
AD=AS
PD=PS
}
Else{
AD=AREA(D) *W/IN_D
PD=PERIMETER(D) *W/IN_D
AS=AREA(S) *W/IN_S
PS=PERIMETER(S) * W/IN_S
}
]
}
#ELSE
DMACRO MOSPROP DEVICELAYER PIN AUXLAYER{
[Property W,L
W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2
L=AREA(DEVICELAYER)/W
]
}
#ENDIF
//////////////////////////////////////////////
//   INPUT LAYER STATEMENTS
//////////////////////////////////////////////
DRC:1 = EXTENT
BULK = SIZE DRC:1 BY 1.0

 //======================
//===  INPUT-LAYERS  ===
//======================

LAYER MAP	1	DATATYPE	0	1001
LAYER DIFF		1001		// Diffusion
LAYER MAP	3	DATATYPE	0	1002
LAYER NWEL		1002		// N-well
LAYER MAP	6	DATATYPE	0	1003
LAYER TWEL		1003		// T-well for Triple Well Process
LAYER MAP	7	DATATYPE	0	1004
LAYER PWBLK		1004		// Inductor Pwell Block
LAYER MAP	11	DATATYPE	0	1005
LAYER PPLUS		1005		// P+ Imp
LAYER MAP	12	DATATYPE	0	1006
//LAYER NPLUS		1006		// N+ Imp
LAYER NPLUSi		1006		// N+ Imp
LAYER MAP       5     	DATATYPE       	11     	2000
LAYER PC        2000			//  
LAYER MAP	20	DATATYPE	0	1007
LAYER VTPL		1007		// Low Vt PMOS
LAYER MAP	21	DATATYPE	0	1008
LAYER VTPHL		1008		// Thick gate Low Vt PMOS
LAYER MAP	22	DATATYPE	0	1009
LAYER VTNL		1009		// Low Vt NMOS; Thick gate Low Vt NMOS
LAYER MAP	23	DATATYPE	0	1010
LAYER VTNI		1010		// Zero Vt NMOS
LAYER MAP	24	DATATYPE	0	1011
LAYER VTNHL		1011		// Thick gate Low Vt NMOS
LAYER MAP	31	DATATYPE	0	1012
LAYER ESD		1012		// ESD Imp
LAYER MAP	32	DATATYPE	0	1013
LAYER PESD		1013		// P+ ESD Imp
LAYER MAP	36	DATATYPE	0	1014
LAYER SAB		1014		// Salicide Block
LAYER MAP	37	DATATYPE	0	1015
LAYER TG		1015		// Thick Oxide
LAYER MAP	38	DATATYPE	0	1016
LAYER HR		1016		// High Resistor
LAYER MAP	39	DATATYPE	0	1017
LAYER CONT		1017		// Contact
LAYER MAP	40	DATATYPE	0	1018
LAYER NWR		1018		// N-well Resistor
LAYER MAP	41	DATATYPE	0	1019
LAYER PO1		1019		// Poly1
LAYER MAP	41	DATATYPE	10	1020
LAYER PO_LVS		1020		// 0.13 Virage SRAM excluding Layer
LAYER MAP	43	DATATYPE	0	1021
LAYER VARACT		1021		// Varactor layer for Vtn operation
LAYER MAP	46	DATATYPE	0	1022
LAYER ME1		1022		// Metal1
LAYER MAP	47	DATATYPE	0	1023
LAYER VI1		1023		// Mvia1
LAYER MAP	48	DATATYPE	0	1024
LAYER ME2		1024		// Metal2
LAYER MAP	49	DATATYPE	0	1025
LAYER VI2		1025		// Mvia2
LAYER MAP	50	DATATYPE	0	1026
LAYER ME3		1026		// Metal3
LAYER MAP	51	DATATYPE	0	1027
LAYER VI3		1027		// Mvia3
LAYER MAP	52	DATATYPE	0	1028
LAYER ME4		1028		// Metal4
LAYER MAP	53	DATATYPE	0	1029
LAYER VI4		1029		// Mvia4
LAYER MAP	54	DATATYPE	0	1030
LAYER ME5		1030		// Metal5
LAYER MAP	55	DATATYPE	0	1031
LAYER VI5		1031		// Mvia5
LAYER MAP	56	DATATYPE	0	1032
LAYER ME6		1032		// Metal6
LAYER MAP	57	DATATYPE	0	1033
LAYER VI6		1033		// Mvia6
LAYER MAP	58	DATATYPE	0	1034
LAYER ME7		1034		// Metal7
LAYER MAP	65	DATATYPE	0	1035
LAYER MMC		1035		// Metal Cap (top Plate)
LAYER MAP	66	DATATYPE	0	1036
LAYER PAD		1036		// Pad
LAYER MAP	72	DATATYPE	7	1037
LAYER M1SLMK		1037		// Metal1 Slot Marking Layer
LAYER MAP	73	DATATYPE	7	1038
LAYER M2SLMK		1038		// Metal2 Slot Marking Layer
LAYER MAP	74	DATATYPE	7	1039
LAYER M3SLMK		1039		// Metal3 Slot Marking Layer
LAYER MAP	75	DATATYPE	7	1040
LAYER M4SLMK		1040		// Metal4 Slot Marking Layer
LAYER MAP	76	DATATYPE	7	1041
LAYER M5SLMK		1041		// Metal5 Slot Marking Layer
LAYER MAP	77	DATATYPE	7	1042
LAYER M6SLMK		1042		// Metal6 Slot Marking Layer
LAYER MAP	78	DATATYPE	7	1043
LAYER M7SLMK		1043		// Metal7 Slot Marking Layer
LAYER MAP	81	DATATYPE	0	1044
LAYER RSYMBOL		1044		// Duffusion Resistor Marker
LAYER MAP	82	DATATYPE	0	1045
LAYER PSYMBOL		1045		// Poly-Resistor Marker
LAYER MAP	83	DATATYPE	0	1046
LAYER WSYMBOL		1046		// Well-Resistor Marker
LAYER MAP	85	DATATYPE	0	1047
LAYER GTEXT		1047		// Generic LVS text
LAYER MAP	87	DATATYPE	0	1048
LAYER IOMARK		1048		// I/O Area Marker
LAYER MAP	88	DATATYPE	0	1049
LAYER FUSEMARK		1049		// Fuse Area Marker
LAYER MAP	89	DATATYPE	0	1050
LAYER FLPMARK		1050		// Flip Chip Bump Pad Area Marker
LAYER MAP	90	DATATYPE	0	1051
LAYER PADMARK		1051		// PAD Area Marker
LAYER MAP	91	DATATYPE	0	1052
LAYER IOID		1052		// Marker for ESD protection
LAYER MAP	93	DATATYPE	0	1053
LAYER ROM_ID		1053		// ROM Marker
LAYER MAP	94	DATATYPE	0	1054
LAYER DP_ID		1054		// Dual Port SRAM ID layer
LAYER MAP	94	DATATYPE	20	1055
LAYER DPV_ID		1055		// Dual Port SRAM ID layer for Virage LP
LAYER MAP	94	DATATYPE	21	1056
LAYER V2PRF_ID		1056		// 2PRF ID layer for Virage LP
LAYER MAP	94	DATATYPE	22	1094
LAYER DP_ID1            1094            // Dual Port SRAM ID layer (7.93) 
LAYER MAP	95	DATATYPE	0	1057
LAYER BLSP_ID1		1057		// Borderless SP SRAM ID(3.15cellVG.1-p1)
LAYER MAP	95	DATATYPE	20	1058
LAYER BLSPV_ID		1058		// Borderless SP SRAM ID for Virage LP
LAYER MAP	96	DATATYPE	0	1059
LAYER XDIODE		1059		// Ignore Diode Device Marker
LAYER MAP	97	DATATYPE	0	1060
LAYER IRAM		1060		// SRAM Cell Array Marker
LAYER MAP	98	DATATYPE	0	1061
LAYER BDSP_ID		1061		// Bordered Single Port SRAM ID layer
LAYER MAP	99	DATATYPE	0	1062
LAYER SEPGND		1062		// For LVS Purpose
LAYER MAP	100	TEXTTYPE	0	1063
LAYER PO_TEXT		1063		// Poly Text
LAYER MAP	100	DATATYPE	37	1064
LAYER VINST_B		1064		// For LVS Prupose
LAYER MAP	101	TEXTTYPE	0	1065
LAYER M1_TEXT		1065		// Metal1 Text
LAYER MAP	102	TEXTTYPE	0	1066
LAYER M2_TEXT		1066		// Metal2 Text
LAYER MAP	103	TEXTTYPE	0	1067
LAYER M3_TEXT		1067		// Metal3 Text
LAYER MAP	104	TEXTTYPE	0	1068
LAYER M4_TEXT		1068		// Metal4 Text
LAYER MAP	105	TEXTTYPE	0	1069
LAYER M5_TEXT		1069		// Metal5 Text
LAYER MAP	106	TEXTTYPE	0	1070
LAYER M6_TEXT		1070		// Metal6 Text
LAYER MAP	107	TEXTTYPE	0	1071
LAYER M7_TEXT		1071		// Metal7 Text
LAYER MAP	108	TEXTTYPE	0	1072
LAYER M8_TEXT		1072		// Metal8 Text
LAYER MAP	111	DATATYPE	30	1073
LAYER MRSYMBOL		1073		// Metal Resistor Marker layer
LAYER MAP	111	DATATYPE	33	1074
LAYER SIZE1		1074		// Mark layer for device mapping
LAYER MAP	111	DATATYPE	34	1075
LAYER SIZE10		1075		// Mark layer for device mapping
LAYER MAP	112	DATATYPE	30	1076
LAYER CSYMBOL		1076		// Capacitor Marker layer
LAYER MAP	112	DATATYPE	33	1077
LAYER SIZE2		1077		// Mark layer for device mapping
LAYER MAP	112	DATATYPE	34	1078
LAYER SIZE11		1078		// Mark layer for device mapping
LAYER MAP	113	DATATYPE	30	1079
LAYER BJTSYMBOL		1079		// BJT Bipolar Transistor Marker layer
LAYER MAP	113	DATATYPE	33	1080
LAYER SIZE3		1080		// Mark layer for device mapping
LAYER MAP	113	DATATYPE	34	1081
LAYER SIZE12		1081		// Mark layer for device mapping
LAYER MAP	114	DATATYPE	0	1082
LAYER DIODEID		1082		// For LVS Prupose
LAYER MAP	114	DATATYPE	30	1083
LAYER DSYMBOL		1083		// Diode Marker layer
LAYER MAP	114	DATATYPE	33	1084
LAYER SIZE4		1084		// Mark layer for device mapping
LAYER MAP	115	DATATYPE	33	1085
LAYER SIZE5		1085		// Mark layer for device mapping
LAYER MAP	116	DATATYPE	33	1086
LAYER SIZE6		1086		// Mark layer for device mapping
LAYER MAP	117	DATATYPE	33	1087
LAYER SIZE7		1087		// Mark layer for device mapping
LAYER MAP	117	DATATYPE	36	1088
LAYER LSYMBOL		1088		// Inductor Marker layer
LAYER MAP	118	DATATYPE	30	1089
LAYER MMSYMBOL		1089		// Mixed Mode Device Marker layer 
LAYER MAP	118	DATATYPE	33	1090
LAYER SIZE8		1090		// Mark layer for device mapping
LAYER MAP	119	DATATYPE	30	1091
LAYER RFSYMBOL		1091		// RF Device Marker layer
LAYER MAP	119	DATATYPE	33	1092
LAYER SIZE9		1092		// Mark layer for device mapping
LAYER MAP	141	DATATYPE	0	1093
LAYER HTNW		1093		// For DRC Purpose
LAYER MAP       13      DATATYPE        0       1094
LAYER VTP               1094            // 1.5V PMOS Device
LAYER MAP       14      DATATYPE        0       1095
LAYER VTN               1095            // 1.5V NMOS Device
LAYER MAP       15      DATATYPE        0       1096
LAYER VTPH              1096            // High Vt PMOS Device
LAYER MAP       16      DATATYPE        0       1097
LAYER VTNH              1097            // High Vt NMOS Device
LAYER MAP       17      DATATYPE        0       1098
LAYER PMINUS            1098            // 3.3V PMOS Device
LAYER MAP       18      DATATYPE        0       1099
LAYER NMINUS            1099            // 3.3V NMOS Device
LAYER MAP       70      DATATYPE        0       1100
LAYER XOPCD             1100            // Diffusion OPC Block
LAYER MAP       71      DATATYPE        0       1101
LAYER XOPCP             1101            // Poly OPC Block
LAYER MAP       72      DATATYPE        0       1102
LAYER XOPCM1            1102            // Metal1 OPC Block
LAYER MAP       73      DATATYPE        0       1103
LAYER XOPCM2            1103            // Metal2 OPC Block
LAYER MAP       74      DATATYPE        0       1104
LAYER XOPCM3            1104            // Metal3 OPC Block
LAYER MAP       75      DATATYPE        0       1105
LAYER XOPCM4            1105            // Metal4 OPC Block
LAYER MAP       76      DATATYPE        0       1106
LAYER XOPCM5            1106            // Metal5 OPC Block
LAYER MAP       77      DATATYPE        0       1107
LAYER XOPCM6            1107            // Metal6 OPC Block
LAYER MAP       78      DATATYPE        0       1108
LAYER XOPCM7            1108            // Metal7 OPC Block
LAYER MAP       79      DATATYPE        0       1109
LAYER XOPCM8            1109            // Metal8 OPC Block
LAYER MAP       80      DATATYPE        0       1110
LAYER XOPCC             1110            // Contact OPC Blcok 
LAYER MAP       70      DATATYPE        8       1111
LAYER DIFFDUMY          1111            // Diffusion dummy creation by customer
LAYER MAP       71      DATATYPE        8       1112
LAYER PO1DUMY           1112            // Poly1 dummy creation by customer 
LAYER MAP       72      DATATYPE        8       1113
LAYER M1DUMY            1113            // Metal1 dummy creation by customer 
LAYER MAP       73      DATATYPE        8       1114
LAYER M2DUMY            1114            // Metal2 dummy creation by customer 
LAYER MAP       74      DATATYPE        8       1115
LAYER M3DUMY            1115            // Metal3 dummy creation by customer 
LAYER MAP       75      DATATYPE        8       1116
LAYER M4DUMY            1116            // Metal4 dummy creation by customer 
LAYER MAP       76      DATATYPE        8       1117
LAYER M5DUMY            1117            // Metal5 dummy creation by customer 
LAYER MAP       77      DATATYPE        8       1118
LAYER M6DUMY            1118            // Metal6 dummy creation by customer 
LAYER MAP       78      DATATYPE        8       1119
LAYER M7DUMY            1119            // Metal7 dummy creation by customer 
LAYER MAP	86	DATATYPE	1	1120
LAYER M1RESMK		1120		//Metal1 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	2	1121
LAYER M2RESMK		1121		//Metal2 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	3	1122
LAYER M3RESMK		1122		//Metal3 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	4	1123
LAYER M4RESMK		1123		//Metal4 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	5	1124
LAYER M5RESMK		1124		//Metal5 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	6	1125
LAYER M6RESMK		1125		//Metal6 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	7	1126
LAYER M7RESMK		1126		//Metal7 Resistor Marker Layer 
LAYER MAP 	7	DATATYPE	36	1127
LAYER NATIVE		1127

LAYER MAP       117     DATATYPE        17      1255
LAYER WELLBODY          1255            //
LAYER MAP       86      DATATYPE        21      1256
LAYER MOMSYM            1256            // MOM CAP marker layer
LAYER MAP       119     DATATYPE        31      1257
LAYER RFMOS_S           1257

LAYER MAP       41      DATATYPE        6       1258
LAYER PO2               1258            // Poly2
LAYER MAP       41      DATATYPE        7       2258
LAYER PO2DMY            2258            // Poly2 DUMMY

//JS
//LAYER MAP       18      DATATYPE        8       1259
LAYER MAP       18      DATATYPE        2       1259 
LAYER SENSOR            1259            //
LAYER MAP       66      DATATYPE        20       1260
LAYER RED               1260            //
LAYER MAP       66      DATATYPE        21       1261
LAYER GREEN             1261            //
LAYER MAP       66      DATATYPE        22       1262
LAYER BLUE              1262            //
LAYER MAP       66      DATATYPE        23       1263
LAYER BLACK             1263            //
LAYER MAP       66      DATATYPE        24       1264
LAYER PLANAR            1264            //
LAYER MAP       66      DATATYPE        25       1265
LAYER MICRO_LENS        1265            //
LAYER MAP       86      DATATYPE        36       1266
LAYER SEALRMARK		1266            //
LAYER MAP       2      DATATYPE         18       1267
LAYER PFIELD            1267            //
LAYER MAP       122      DATATYPE       30       1268
LAYER PIXELMK   	1268            //

LAYOUT TOP LAYER PAD ME4 VI3 ME3 VI2 ME2 VI1 ME1
TEXT LAYER PO_TEXT M1_TEXT M2_TEXT M3_TEXT M4_TEXT M5_TEXT M6_TEXT M7_TEXT
PORT LAYER TEXT PO_TEXT M1_TEXT M2_TEXT M3_TEXT M4_TEXT M5_TEXT M6_TEXT M7_TEXT

ATTACH PO_TEXT PLY_C
ATTACH PO_TEXT PLY2_C
ATTACH M1_TEXT ME1_C

#IFDEF TOP_METAL_ME3
	TOP_M			= COPY ME3
	SEC_LAST_MET		= COPY ME2
	TOP_M_C			= COPY ME3_C
	SEC_LAST_MET_C		= COPY ME2_C
	TOP_VIA 		= COPY VI2
	TOP_VIA_MMC		= VI2 AND MMC
	TOP_VIA_SLM		= VI2 NOT TOP_VIA_MMC
	ATTACH M2_TEXT SEC_LAST_MET_C
	ATTACH M3_TEXT TOP_M_C
#ENDIF

#IFDEF TOP_METAL_ME4
        TOP_M                   = COPY ME4
        SEC_LAST_MET            = COPY ME3
        TOP_M_C                 = COPY ME4_C
        SEC_LAST_MET_C          = COPY ME3_C
        TOP_VIA                 = COPY VI3
        TOP_VIA_MMC             = VI3 AND MMC
        TOP_VIA_SLM             = VI3 NOT TOP_VIA_MMC
        ATTACH M2_TEXT ME2_C
        ATTACH M3_TEXT SEC_LAST_MET_C
        ATTACH M4_TEXT TOP_M_C
#ENDIF

MMC_C = COPY MMC

//////////////////////////////////////////////
// LAYER DERIVATIONS AND OPERATIONS
//////////////////////////////////////////////
NWELL	  = NWEL NOT TWEL
PSUBALL	  = BULK     NOT  NWEL
SEPGND:1  = SIZE SEPGND BY 0.01
SEPGND:2  = SEPGND:1 NOT  SEPGND
PSUB      = PSUBALL  NOT  SEPGND:2
//JS
PWELL     = PSUB OR TWEL

//JS
//NPLUS2  = NPLUSi OR (SIZE PC BY 1.5)
//NPLUS2  = NPLUSi OR (SIZE PC BY 0.5)
NPLUS2  = NPLUSi OR (SIZE PC BY 0.15)

//NPLUS   = NPLUS2 OR (SIZE SENSOR BY 0.5)
NPLUS   = NPLUS2 OR (SIZE SENSOR BY 0.2)

BPDIFF  = DIFF   AND PPLUS
BNDIFF  = DIFF   AND NPLUS
PGATE   = BPDIFF AND PO1
NGATE   = BNDIFF AND PO1

PGATE_SP = BPDIFF AND PO1
NGATE_SP = BNDIFF AND PO1

//-------------------------------
// Define  P+ diffusion resistor
//-------------------------------
PDRES    = BPDIFF AND RSYMBOL  
NSPSRES  = ((PDRES  AND SAB) INSIDE NWELL) NOT TG
SPSRES:1 = (PDRES  NOT NSPSRES) NOT INTERACT SAB
SPSRES   = SPSRES:1 INSIDE NWELL 
RPDS     = BPDIFF NOT PDRES
PSD      = RPDS   NOT PGATE
PSD_C    = COPY PSD
//-----------------------------
// Define N+ diffusion resistor
//-----------------------------
NDRES    = BNDIFF AND RSYMBOL  
NSNSRES_SP  = ((NDRES AND SAB) NOT INSIDE  NWELL) NOT TG
NSNSRES_A = EXPAND EDGE(LENGTH (NSHRPYR_SP COINCIDENT EDGE PLY_C) < 1) by 0.05
NSNSRES_WS10_SP = NSNSRES_SP INTERACT NSNSRES_A
NSNSRES_WG10_SP = NSNSRES_SP NOT NSNSRES_WS10_SP

SNSRES:1 = (NDRES    NOT NSNSRES_SP) NOT INTERACT SAB   
SNSRES   = SNSRES:1  NOT INTERACT NWELL 
RNDS     = BNDIFF  NOT NDRES
NSD      = RNDS    NOT NGATE
NSD_C    = COPY NSD
//-------------------------------
// Define Poly resistor
//-------------------------------
PYRES      = PO1   AND PSYMBOL
SPYRES     = PYRES  AND SAB
HRPYR      = (SPYRES AND HR) INTERACT PPLUS
NSHRPYR    = HRPYR  AND NWELL
NSHRPYR_SP    = HRPYR  AND NWELL
NSHRPYR_A = EXPAND EDGE(LENGTH (NSHRPYR_SP COINCIDENT EDGE PLY_C) < 2) by 0.05
NSHRPYR_WS20_SP    = NSHRPYR_SP INTERACT NSHRPYR_A
NSHRPYR_WG20_SP    = NSHRPYR_SP NOT NSHRPYR_WS20_SP

APYRES     = PYRES  NOT HRPYR
PPYRES     = APYRES AND PPLUS
NSAPYR     = PPYRES AND SAB
NSPPYR     = (NSAPYR AND NWELL) NOT TG
NSPPYR_A = EXPAND EDGE(LENGTH (NSPPYR COINCIDENT EDGE PLY_C) < 2) by 0.05
NSPPYR_WS20_SP = NSPPYR INTERACT NSPPYR_A
NSPPYR_WG20_SP = NSPPYR NOT NSPPYR_WS20_SP

SPPYR      = PPYRES NOT INTERACT SAB

NPYRES     = APYRES AND NPLUS
NSBPYR     = NPYRES AND SAB
NSNPYR_SP = (NSBPYR NOT NWELL) NOT TG
NSNPYR_A = EXPAND EDGE(LENGTH (NSNPYR_SP COINCIDENT EDGE PLY_C) < 2) by 0.05
NSNPYR_WS20_SP = NSNPYR_SP INTERACT NSNPYR_A
NSNPYR_WG20_SP = NSNPYR_SP NOT NSNPYR_WS20_SP
SNPYR      = NPYRES NOT INTERACT SAB

PLY1       = (PO1 NOT INTERACT PYRES) NOT INTERACT DIFF
PLY        = (PO1  NOT  PYRES) NOT PLY1

PLY_C      = (PO1 NOT PYRES) NOT PO2

//-------------------------------
// Define N-well resistor
//-------------------------------
WRES    = NWELL AND NWR 
WEL     = NWELL NOT WRES
WELL     = NWEL NOT WRES

ME1_C = COPY ME1
ME2_C = COPY ME2
ME3_C = COPY ME3
ME4_C = COPY ME4
//-------------------------------
// Derive Transistor Device
//-------------------------------
RAMCELL = (BLSP_ID1 OR BDSP_ID) OR DP_ID1 
//RAM_PBIT = ((PGATE AND RAMCELL) INTERACT PSD ==2) NOT PSUB
//JS
RAM_PBIT = ((PGATE AND RAMCELL) INTERACT PSD ==2) NOT (PSUB OR TWEL)
RAM_NBIT = ((NGATE AND RAMCELL) INTERACT NSD ==2) NOT WEL
#IFDEF POST_OPC
RBPGAT_B6T315 = RAM_PBIT AND ((BLSP_ID1 NOT BDSP_ID) NOT DP_ID1)
RBNGAT_B6T315 = RAM_NBIT AND ((BLSP_ID1 NOT BDSP_ID) NOT DP_ID1)
RBNPD_B6T315 = AREA RBNGAT_B6T315 >0.05			/* PD:0.064,PG:0.041*/
RBNPG_B6T315 = RBNGAT_B6T315 NOT RBNPD_B6T315

RBPGAT_B6T417 = RAM_PBIT AND ((BDSP_ID NOT BLSP_ID1) NOT DP_ID1)
RBNGAT_B6T417 = RAM_NBIT AND ((BDSP_ID NOT BLSP_ID1) NOT DP_ID1)
RBNPD_B6T417 = AREA RBNGAT_B6T417 >0.05			/* PD:0.07,PG:0.042*/
RBNPG_B6T417 = RBNGAT_B6T417 NOT RBNPD_B6T417

RBPGAT_B8T793 = RAM_PBIT AND ((DP_ID1 NOT BDSP_ID) NOT BLSP_ID1)
RBNGAT_B8T793 = RAM_NBIT AND ((DP_ID1 NOT BDSP_ID) NOT BLSP_ID1)
RBNPD_B8T793 = AREA RBNGAT_B8T793 >0.05			/* PD:0.128,PG:0.039 */
RBNPG_B8T793 = RBNGAT_B8T793 NOT RBNPD_B8T793
#ENDIF

#IFDEF PRE_OPC
RBPGAT_B6T315 = RAM_PBIT AND ((BLSP_ID1 NOT BDSP_ID) NOT DP_ID1)
RBNGAT_B6T315 = RAM_NBIT AND ((BLSP_ID1 NOT BDSP_ID) NOT DP_ID1)
RBNPD_B6T315 = AREA RBNGAT_B6T315 >0.05			/* PD:0.057,PG:0.0352 */
RBNPG_B6T315 = RBNGAT_B6T315 NOT RBNPD_B6T315

RBPGAT_B6T417 = RAM_PBIT AND ((BDSP_ID NOT BLSP_ID1) NOT DP_ID1)
RBNGAT_B6T417 = RAM_NBIT AND ((BDSP_ID NOT BLSP_ID1) NOT DP_ID1)
RBNPD_B6T417 = AREA RBNGAT_B6T417 >0.05			/* PD:0.0585,PG:0.0352 */
RBNPG_B6T417 = RBNGAT_B6T417 NOT RBNPD_B6T417

RBPGAT_B8T793 = RAM_PBIT AND ((DP_ID1 NOT BDSP_ID) NOT BLSP_ID1)
RBNGAT_B8T793 = RAM_NBIT AND ((DP_ID1 NOT BDSP_ID) NOT BLSP_ID1)
RBNPD_B8T793 = AREA RBNGAT_B8T793 >0.05			/* PD:0.1095,PG:0.033 */
RBNPG_B8T793 = RBNGAT_B8T793 NOT RBNPD_B8T793
#ENDIF

RBPGAT_SP  = ((((PGATE_SP NOT RAMCELL) NOT TG) NOT PSUB) NOT TWEL) NOT INTERACT (NATIVE OR VTPL)
RBNGAT_SP1  = ((((NGATE_SP NOT RAMCELL) NOT TG) NOT NWEL) NOT TWEL) NOT INTERACT (NATIVE OR VTNL)
RBNGAT_SP = ( RBNGAT_SP1 NOT PIXELMK ) NOT PFIELD
RBNGAT_SP18 = RBNGAT_SP1 NOT RBNGAT_SP
TRBPGAT_SP = ((((PGATE_SP NOT RAMCELL) AND TG) NOT PSUB) NOT TWEL) NOT INTERACT (NATIVE OR VTPHL)
TRBNGAT_SP = ((((NGATE_SP NOT RAMCELL) AND TG) NOT NWEL) NOT TWEL) NOT INTERACT (NATIVE OR VTNHL)
BPWNGAT_SP = (((NGATE_SP NOT RAMCELL) NOT TG) AND TWEL) NOT INTERACT NATIVE
TBPWNGAT_SP =(((NGATE_SP NOT RAMCELL) AND TG) AND TWEL) NOT INTERACT NATIVE
NVTNGAT_SP = (((NGATE_SP NOT RAMCELL) NOT TG) NOT NWEL) INTERACT NATIVE
NVTPGAT_SP = (((PGATE_SP NOT RAMCELL) NOT TG) NOT PSUB) INTERACT NATIVE
TNVTNGAT_SP =(((NGATE_SP NOT RAMCELL) AND TG) NOT NWEL) INTERACT NATIVE
TNVTPGAT_SP =(((PGATE_SP NOT RAMCELL) AND TG) NOT PSUB) INTERACT NATIVE

LVTNGAT_CIS1 = (((NGATE_SP NOT RAMCELL) NOT TG) NOT NWEL) INTERACT VTNL
LVTNGAT_CIS= ( LVTNGAT_CIS1 NOT PIXELMK ) NOT PFIELD
LVTNGAT_CIS18= LVTNGAT_CIS1 NOT LVTNGAT_CIS
LVTPGAT_CIS = (((PGATE_SP NOT RAMCELL) NOT TG) NOT PSUB) INTERACT VTPL
TLVTNGAT_CIS =(((NGATE_SP NOT RAMCELL) AND TG) NOT NWEL) INTERACT VTNHL
TLVTPGAT_CIS =(((PGATE_SP NOT RAMCELL) AND TG) NOT PSUB) INTERACT VTPHL

//PTAP    = (PSD NOT SEALRMARK) AND PSUB
//JS
PTAP    = (PSD NOT SEALRMARK) AND PWELL
NTAP    = NSD AND WEL
TTAP	= PSD AND TWEL
//------------------------------
// Define P+/N-Well Diode
//------------------------------
PACT      = PSD      AND  NWELL
DPDIOD:1  = PACT     NOT  INTERACT PO1
DPDIOD:2  = DPDIOD:1 NOT  INTERACT RSYMBOL  
DPDIOD:3  = DPDIOD:2 NOT  INTERACT BJTSYMBOL
DPDIOD  = DPDIOD:3 NOT  INTERACT XDIODE

//-----------------
// Well diode 
//-----------------
NWNACT      = (WEL  INTERACT  NSD) INSIDE DSYMBOL

//------------------------------
// Define N+/P-well Diode
//------------------------------
NACT      = NSD  AND  PSUB
DNDIOD:1  = NACT NOT INTERACT PO1
DNDIOD:2  = DNDIOD:1 NOT INTERACT RSYMBOL
DNDIOD:3  = DNDIOD:2 NOT INTERACT BJTSYMBOL
DNDIOD:4  = DNDIOD:3 NOT INTERACT XDIODE
DNDIOD  = DNDIOD:4 NOT INTERACT SENSOR

DN_SEN = ((DNDIOD:4 AND SENSOR )AND SAB )NOT BLACK
DN_SEN_BR:1 = ((DN_SEN NOT RED) NOT GREEN) NOT BLUE
DN_SEN_R:1 = ((DN_SEN AND RED) NOT GREEN) NOT BLUE
DN_SEN_G:1 = ((DN_SEN AND GREEN) NOT RED) NOT BLUE
DN_SEN_BL:1 = ((DN_SEN AND BLUE) NOT RED) NOT GREEN

MLENS = MICRO_LENS AND PLANAR

DN_WM_SEN_BR = DN_SEN_BR:1 NOT MICRO_LENS
DN_WM_SEN_R = DN_SEN_R:1 NOT MICRO_LENS
DN_WM_SEN_G = DN_SEN_G:1 NOT MICRO_LENS
DN_WM_SEN_BL = DN_SEN_BL:1 NOT MICRO_LENS

DN_ML_SEN_BR = DN_SEN_BR:1 AND MLENS
DN_ML_SEN_R = DN_SEN_R:1 AND MLENS
DN_ML_SEN_G = DN_SEN_G:1 AND MLENS
DN_ML_SEN_BL = DN_SEN_BL:1 AND MLENS

//------------------------------
//  Derive BJT Device
//------------------------------
PNPNWEL  = NWEL AND BJTSYMBOL
BJTPOD    = (PSD_C INSIDE PNPNWEL) AND BJTSYMBOL
PNPBJT   = (HOLES PTAP INNER ) ENCLOSE PNPNWEL

PNP_E_30  = RECTANGLE BJTPOD ==3 BY ==3
ACTBJT3  = PNPBJT ENCLOSE PNP_E_30
PNP_E_50  = RECTANGLE BJTPOD ==5 BY ==5
ACTBJT5  = PNPBJT ENCLOSE PNP_E_50
PNP_E_100  = RECTANGLE BJTPOD ==10 BY ==10
ACTBJT10  = PNPBJT ENCLOSE PNP_E_100
//-------------------------------------
// Define 8T RAM cell soft tie
//-------------------------------------
NDX  = size NSD by 0.005
PTX  = size PTAP by 0.005 
STPX = PTX and NDX
STP  = STPX and (DP_ID OR DP_ID1)

/////////////////////////
// Define Capacitor
/////////////////////////
CMMC_SP= MMC INTERACT TOP_VIA_MMC

CW1_SP = GROW CMMC_SP RIGHT BY 0.01
CL1_SP = GROW CMMC_SP TOP   BY 0.01

PIPCAP_SP = (PO2 AND PO1) NOT PO2DMY

CPW1_SP = GROW PIPCAP_SP RIGHT BY 0.01
CPL1_SP = GROW PIPCAP_SP TOP   BY 0.01

PLY2_C = PO2 INTERACT PIPCAP_SP

////////////////////////////////////////
//   Establish Layer Connectivity
////////////////////////////////////////
#IFDEF TOP_METAL_ME3
	CONNECT ME1_C ME2_C		BY VI1
	CONNECT SEC_LAST_MET_C TOP_M_C	BY TOP_VIA_SLM
	CONNECT MMC_C TOP_M_C		BY TOP_VIA_MMC
#ENDIF
#IFDEF TOP_METAL_ME4
	CONNECT ME1_C ME2_C		BY VI1
	CONNECT ME2_C SEC_LAST_MET_C	BY VI2
	CONNECT SEC_LAST_MET_C TOP_M_C 	BY TOP_VIA_SLM
	CONNECT MMC_C TOP_M_C		BY TOP_VIA_MMC
#ENDIF

CONNECT PLY_C ME1_C   BY CONT
CONNECT PLY2_C ME1_C   BY CONT
CONNECT PSD_C ME1_C   BY CONT
CONNECT NSD_C ME1_C   BY CONT
CONNECT ME1 PNP_E_30 BY CONT
CONNECT ME1 PNP_E_50 BY CONT
CONNECT ME1 PNP_E_100 BY CONT
CONNECT PTAP STP
CONNECT NSD  STP

SCONNECT NSD_C WELL  BY NTAP
SCONNECT NSD_C WEL  BY NTAP
SCONNECT PSD_C PSUB BY PTAP
SCONNECT PSD_C TWEL BY TTAP
//JS
SCONNECT PSD_C PWELL BY TTAP 
SCONNECT PSD_C PWELL BY PTAP 


NNBDIF  = NSD_C    TOUCH  PSD_C
PPBDIF  = PSD_C    TOUCH  NSD_C
NPBDIF  = NNBDIF OR PPBDIF
SCONNECT NSD_C NPBDIF BY NNBDIF
SCONNECT PSD_C NPBDIF BY PPBDIF
//////////////////////////////////////// 
//  Device Extraction Operations
////////////////////////////////////////

////////////////////////////////////////
//   Transistor Devices
////////////////////////////////////////
DEVICE MN(N_15_SP)    RBNGAT_SP   PLY_C(G)  NSD_C(S)  NSD_C(D)  PSUB(B) <BNDIFF>
CMACRO MOSPROP RBNGAT_SP NSD_C BNDIFF
TRACE PROPERTY MN(N_15_SP) L L 3
TRACE PROPERTY MN(N_15_SP) W W 3

DEVICE MP(P_15_SP)    RBPGAT_SP   PLY_C(G)  PSD_C(S)  PSD_C(D)  WEL(B) <BPDIFF>
CMACRO MOSPROP RBPGAT_SP PSD_C BPDIFF
TRACE PROPERTY MP(P_15_SP) L L 3
TRACE PROPERTY MP(P_15_SP) W W 3

DEVICE MN(N_33_SP)   TRBNGAT_SP  PLY_C(G)  NSD_C(S)  NSD_C(D)  PSUB(B) <BNDIFF>
CMACRO MOSPROP TRBNGAT_SP NSD_C BNDIFF
TRACE PROPERTY MN(N_33_SP) L L 3
TRACE PROPERTY MN(N_33_SP) W W 3

DEVICE MP(P_33_SP)   TRBPGAT_SP  PLY_C(G)  PSD_C(S)  PSD_C(D)  WEL(B) <BPDIFF>
CMACRO MOSPROP TRBPGAT_SP PSD_C BPDIFF
TRACE PROPERTY MP(P_33_SP) L L 3
TRACE PROPERTY MP(P_33_SP) W W 3

DEVICE MN(N_NVT_15_MM) NVTNGAT_SP PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B) <BNDIFF>
CMACRO MOSPROP NVTNGAT_SP NSD_C BNDIFF
TRACE PROPERTY MN(N_NVT_15_MM) L L 3
TRACE PROPERTY MN(N_NVT_15_MM) W W 3

DEVICE MN(N_NVT_33_MM) TNVTNGAT_SP PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B) <BNDIFF>
CMACRO MOSPROP TNVTNGAT_SP NSD_C BNDIFF
TRACE PROPERTY MN(N_NVT_33_MM) L L 3
TRACE PROPERTY MN(N_NVT_33_MM) W W 3

DEVICE MN(N_LV_15_CIS) LVTNGAT_CIS PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B) <BNDIFF>
CMACRO MOSPROP LVTNGAT_CIS NSD_C BNDIFF
TRACE PROPERTY MN(N_LV_15_CIS) L L 3
TRACE PROPERTY MN(N_LV_15_CIS) W W 3

DEVICE MP(P_LV_15_CIS) LVTPGAT_CIS PLY_C(G) PSD_C(S) PSD_C(D) WEL(B) <BPDIFF>
CMACRO MOSPROP LVTPGAT_CIS PSD_C BPDIFF
TRACE PROPERTY MP(P_LV_15_CIS) L L 3
TRACE PROPERTY MP(P_LV_15_CIS) W W 3

DEVICE MN(N_LV_33_CIS) TLVTNGAT_CIS PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B) <BNDIFF>
CMACRO MOSPROP TLVTNGAT_CIS NSD_C BNDIFF
TRACE PROPERTY MN(N_LV_33_CIS) L L 3
TRACE PROPERTY MN(N_LV_33_CIS) W W 3

DEVICE MP(P_LV_33_CIS) TLVTPGAT_CIS PLY_C(G) PSD_C(S) PSD_C(D) WEL(B) <BPDIFF>
CMACRO MOSPROP TLVTPGAT_CIS PSD_C BPDIFF
TRACE PROPERTY MP(P_LV_33_CIS) L L 3
TRACE PROPERTY MP(P_LV_33_CIS) W W 3

DEVICE MN(N_BPW_15_MM) BPWNGAT_SP PLY_C(G) NSD_C(S) NSD_C(D) TWEL(B) <BNDIFF>
CMACRO MOSPROP BPWNGAT_SP NSD_C BNDIFF
TRACE PROPERTY MN(N_BPW_15_MM) L L 3
TRACE PROPERTY MN(N_BPW_15_MM) W W 3

DEVICE MN(N_BPW_33_MM) TBPWNGAT_SP PLY_C(G) NSD_C(S) NSD_C(D) TWEL(B) <BNDIFF>
CMACRO MOSPROP TBPWNGAT_SP NSD_C BNDIFF
TRACE PROPERTY MN(N_BPW_33_MM) L L 3
TRACE PROPERTY MN(N_BPW_33_MM) W W 3

//DEVICE MN(N_PG315_SP) RBNPG_B6T315 PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
//JS
DEVICE MN(N_PG315_SP) RBNPG_B6T315 PLY_C(G) NSD_C(S) NSD_C(D) PWELL(B)
TRACE PROPERTY MN(N_PG315_SP) L L 3
TRACE PROPERTY MN(N_PG315_SP) W W 3

//DEVICE MN(N_PD315_SP) RBNPD_B6T315 PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
//JS
DEVICE MN(N_PD315_SP) RBNPD_B6T315 PLY_C(G) NSD_C(S) NSD_C(D) PWELL(B)
TRACE PROPERTY MN(N_PD315_SP) L L 3
TRACE PROPERTY MN(N_PD315_SP) W W 3

DEVICE MP(P_L315_SP) RBPGAT_B6T315 PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
TRACE PROPERTY MP(P_L315_SP) L L 3
TRACE PROPERTY MP(P_L315_SP) W W 3

DEVICE MN(N_RVTCL_18_CIS)    RBNGAT_SP18   PLY_C(G)  NSD_C(S)  NSD_C(D)  PSUB(B) <BNDIFF>
CMACRO MOSPROP RBNGAT_SP18 NSD_C BNDIFF
TRACE PROPERTY MN(N_RVTCL_18_CIS) L L 3
TRACE PROPERTY MN(N_RVTCL_18_CIS) W W 3

DEVICE MN(N_LVCL_18_CIS)    LVTNGAT_CIS18 PLY_C(G)  NSD_C(S)  NSD_C(D)  PSUB(B) <BNDIFF>
CMACRO MOSPROP LVTNGAT_CIS18 NSD_C BNDIFF
TRACE PROPERTY MN(N_LVCL_18_CIS) L L 3
TRACE PROPERTY MN(N_LVCL_18_CIS) W W 3
//////////////////////////
// MIS N N-well Varactor
//////////////////////////
////////////////////////////////////////
//  Resistor Devices 
////////////////////////////////////////

// N-well RES
DEVICE R(RSNWELL) WRES WEL(POS) WEL(NEG) 
[
	property W,L,R
	W  = PERIMETER_COINCIDE(WRES, WEL) / 2	
	L  = AREA(WRES) / W
        R = 488.8*L/(W-0.5e-6)
 ]
TRACE PROPERTY R(RSNWELL) R R 3
//TRACE PROPERTY R(RSNWELL) L L 3
//TRACE PROPERTY R(RSNWELL) W W 3

// Salicide N+ Sheet RES
DEVICE R(RSND) SNSRES NSD_C(POS) NSD_C(NEG) [7]
TRACE PROPERTY R(RSND) R R 3 

// Salicide P+ Sheet RES
DEVICE R(RSPD) SPSRES PSD_C(POS) PSD_C(NEG) [7]
TRACE PROPERTY R(RSPD) R R 3

// Salicide N+ Ploy Sheet RES
DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG)
[
	property W,L,R
	W  = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2	
	L  = AREA(SNPYR) / W
	Rs = 8
	R = Rs*L/(W-0.03e-6)
 ]
TRACE PROPERTY R(RSNPO) R R 3
//TRACE PROPERTY R(RSNPO) L L 3
//TRACE PROPERTY R(RSNPO) W W 3

// Salicide P+ Ploy Sheet RES
DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) 
[
	property W,L,R
	W  = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2	
	L  = AREA(SPPYR) / W
	Rs = 8
	R = Rs*L/(W-0.03e-6)
 ]
TRACE PROPERTY R(RSPPO) R R 3
//TRACE PROPERTY R(RSPPO) L L 3
//TRACE PROPERTY R(RSPPO) W W 3

// Non-Salicide N+ Sheet RES
#IFDEF PEXRUN
DEVICE RNND_SP NSNSRES_SP NSD_C(POS) NSD_C(NEG) PSUB(SUB)
[
	property W,L
	W  = PERIMETER_COINCIDE(NSNSRES_SP, NSD_C) / 2	
	L  = AREA(NSNSRES_SP) / W
]
#ELSE
DEVICE R(RNND_SP) NSNSRES_SP NSD_C(POS) NSD_C(NEG) PSUB(SUB)
[
	property W,L,R
	W  = PERIMETER_COINCIDE(NSNSRES_SP, NSD_C) / 2	
	L  = AREA(NSNSRES_SP) / W

// For Voltage dependent resistance equation,
        Rend   = 20e-6
        Rs     = 67
        deltaW = -0.003e-6
	R = 2*Rend/(W+deltaW)+Rs*L/(W+deltaW)

]
TRACE PROPERTY R(RNND_SP) R R 3
//TRACE PROPERTY R(RNND_SP) L L 3
//TRACE PROPERTY R(RNND_SP) W W 3
#ENDIF

// Non-Salicide P+ Sheet RES
DEVICE R(RNPD) NSPSRES PSD_C(POS) PSD_C(NEG) [100]
TRACE PROPERTY R(RNPD) R R 3

// Non-Salicide N+ Ploy Sheet RES 
#IFDEF PEXRUN
//DEVICE RNNPO_WG20_SP NSNPYR_WG20_SP PLY_C(POS) PLY_C(NEG) PSUB(SUB)
//JS
DEVICE RNNPO_WG20_SP NSNPYR_WG20_SP PLY_C(POS) PLY_C(NEG) PWELL(SUB)
[
	property W,L
	W  = PERIMETER_COINCIDE(NSNPYR_WG20_SP, PLY_C) / 2	
	L  = AREA(NSNPYR_WG20_SP) / W
]
#ELSE
//DEVICE R(RNNPO_WG20_SP) NSNPYR_WG20_SP PLY_C(POS) PLY_C(NEG) PSUB(SUB)
//JS
DEVICE R(RNNPO_WG20_SP) NSNPYR_WG20_SP PLY_C(POS) PLY_C(NEG) PWELL(SUB)
[
	property W,L,R
	W  = PERIMETER_COINCIDE(NSNPYR_WG20_SP, PLY_C) / 2	
	L  = AREA(NSNPYR_WG20_SP) / W
        Rend   = 28e-6
        Rs     = 86.5
        deltaW = -0.09e-6
	R = 2*Rend/(W+deltaW)+Rs*L/(W+deltaW)
]
TRACE PROPERTY R(RNNPO_WG20_SP) R R 3
//TRACE PROPERTY R(RNNPO_WG20_SP) L L 3
//TRACE PROPERTY R(RNNPO_WG20_SP) W W 3
#ENDIF

// Non-Salicide P+ Ploy Sheet RES
#IFDEF PEXRUN
DEVICE RNPPO_WG20_SP NSPPYR_WG20_SP PLY_C(POS) PLY_C(NEG) WEL(SUB)
[
	property W,L
	W  = PERIMETER_COINCIDE(NSPPYR_WG20_SP, PLY_C) / 2	
	L  = AREA(NSPPYR_WG20_SP) / W
]
#ELSE
DEVICE R(RNPPO_WG20_SP) NSPPYR_WG20_SP PLY_C(POS) PLY_C(NEG) WEL(SUB)
[
	property W,L,R
	W  = PERIMETER_COINCIDE(NSPPYR_WG20_SP, PLY_C) / 2	
	L  = AREA(NSPPYR_WG20_SP) / W

// For Voltage dependent resistance equation,
        Rend   = 96e-6
        Rs     = 254
        deltaW = -0.064e-6
	R = 2*Rend/(W+deltaW)+Rs*L/(W+deltaW)

]
TRACE PROPERTY R(RNPPO_WG20_SP) R R 3
//TRACE PROPERTY R(RNPPO_WG20_SP) L L 3
//TRACE PROPERTY R(RNPPO_WG20_SP) W W 3
#ENDIF

// Non-Salicide P+ Ploy Sheet RES
#IFDEF PEXRUN
DEVICE RNPPO_WS20_SP NSPPYR_WS20_SP PLY_C(POS) PLY_C(NEG) WEL(SUB)
[
	property W,L
	W  = PERIMETER_COINCIDE(NSPPYR_WS20_SP, PLY_C) / 2	
	L  = AREA(NSPPYR_WS20_SP) / W
]
#ELSE
DEVICE R(RNPPO_WS20_SP) NSPPYR_WS20_SP PLY_C(POS) PLY_C(NEG) WEL(SUB)
[
	property W,L,R
	W  = PERIMETER_COINCIDE(NSPPYR_WS20_SP, PLY_C) / 2	
	L  = AREA(NSPPYR_WS20_SP) / W

// For Voltage dependent resistance equation,
        Rend   = 96e-6
        Rs     = 254
        deltaW = -0.064e-6
	R = 2*Rend/(W+deltaW)+Rs*L/(W+deltaW)

]
TRACE PROPERTY R(RNPPO_WS20_SP) R R 3
//TRACE PROPERTY R(RNPPO_WS20_SP) L L 3
//TRACE PROPERTY R(RNPPO_WS20_SP) W W 3
#ENDIF

// Mixed Mode 3 Terminals HR resistor //
#IFDEF PEXRUN
DEVICE RNHR1000_WG20_MM NSHRPYR_WG20_SP PLY_C(POS) PLY_C(NEG) WEL(SUB)
[
        PROPERTY W,L
        W = PERIMETER_COINCIDE(NSHRPYR_WG20_SP, PLY_C) / 2
        L = AREA(NSHRPYR_WG20_SP)/W
]
#ELSE
DEVICE R(RNHR1000_WG20_MM) NSHRPYR_WG20_SP PLY_C(POS) PLY_C(NEG) WEL(SUB)
[
        PROPERTY W,L,R
        W = PERIMETER_COINCIDE(NSHRPYR_WG20_SP, PLY_C) / 2
        L = AREA(NSHRPYR_WG20_SP)/W
        REND   = 60e-6
        RS     = 1070
        deltaW = -0.08e-6
        R = (2*REND/(W+deltaW)+RS*(L-0.4e-6)/(W+deltaW))
]
TRACE PROPERTY R(RNHR1000_WG20_MM) R R 3
//TRACE PROPERTY R(RNHR1000_WG20_MM) L L 3
//TRACE PROPERTY R(RNHR1000_WG20_MM) W W 3
#ENDIF
////////////////////////////////////////
//  Diode Devices 
////////////////////////////////////////
DEVICE D(DION_SP) DNDIOD PSUB(POS) NSD_C(NEG) 
TRACE PROPERTY D(DION_SP) A A 3
TRACE PROPERTY D(DION_SP) P P 3

DEVICE D(DIOP_SP) DPDIOD PSD_C(POS) WEL(NEG) 
TRACE PROPERTY D(DIOP_SP) A A 3
TRACE PROPERTY D(DIOP_SP) P P 3

////////////////////////////////////////
//  SENSOR Diode Devices 
////////////////////////////////////////

//Sung-Ho 20150210 For LVS fast
//DEVICE D(DION_WM_BRIGHT) DN_WM_SEN_BR PSUB(POS) NSD_C(NEG) 
//TRACE PROPERTY D(DION_WM_BRIGHT) A A 3
//TRACE PROPERTY D(DION_WM_BRIGHT) P P 3
//
//DEVICE D(DION_WM_RED) DN_WM_SEN_R PSUB(POS) NSD_C(NEG) 
//TRACE PROPERTY D(DION_WM_RED) A A 3
//TRACE PROPERTY D(DION_WM_RED) P P 3
//
//DEVICE D(DION_WM_GREEN) DN_WM_SEN_G PSUB(POS) NSD_C(NEG) 
//TRACE PROPERTY D(DION_WM_GREEN) A A 3
//TRACE PROPERTY D(DION_WM_GREEN) P P 3
//
//DEVICE D(DION_WM_BLUE) DN_WM_SEN_BL PSUB(POS) NSD_C(NEG) 
//TRACE PROPERTY D(DION_WM_BLUE) A A 3
//TRACE PROPERTY D(DION_WM_BLUE) P P 3
//
//DEVICE D(DION_ML_BRIGHT) DN_ML_SEN_BR PSUB(POS) NSD_C(NEG) 
//TRACE PROPERTY D(DION_ML_BRIGHT) A A 3
//TRACE PROPERTY D(DION_ML_BRIGHT) P P 3
//
//DEVICE D(DION_ML_RED) DN_ML_SEN_R PSUB(POS) NSD_C(NEG) 
//TRACE PROPERTY D(DION_ML_RED) A A 3
//TRACE PROPERTY D(DION_ML_RED) P P 3
//
//DEVICE D(DION_ML_GREEN) DN_ML_SEN_G PSUB(POS) NSD_C(NEG) 
//TRACE PROPERTY D(DION_ML_GREEN) A A 3
//TRACE PROPERTY D(DION_ML_GREEN) P P 3
//
//DEVICE D(DION_ML_BLUE) DN_ML_SEN_BL PSUB(POS) NSD_C(NEG)
//TRACE PROPERTY D(DION_ML_BLUE) A A 3
//TRACE PROPERTY D(DION_ML_BLUE) P P 3

////////////////////////////////////////
// BJT
////////////////////////////////////////
DEVICE Q(PNP_V30X30_SP) ACTBJT3  PSUB(C)  WEL(B)  PNP_E_30(E)
[
        PROPERTY A
        A = AREA(PNP_E_30)
]
TRACE PROPERTY Q(PNP_V30X30_SP) A A 3

DEVICE Q(PNP_V50X50_SP) ACTBJT5  PSUB(C)  WEL(B)  PNP_E_50(E)
[
        PROPERTY A
        A = AREA(PNP_E_50)
]
TRACE PROPERTY Q(PNP_V50X50_SP) A A 3

DEVICE Q(PNP_V100X100_SP) ACTBJT10  PSUB(C)  WEL(B)  PNP_E_100(E)
[
        PROPERTY A
        A = AREA(PNP_E_100)
]
TRACE PROPERTY Q(PNP_V100X100_SP) A A 3

///////////////////////////////
// MIM Capacitor
///////////////////////////////
#IFDEF PEXRUN
	DEVICE MIMCAPS_MM  CMMC_SP   MMC_C(POS)  SEC_LAST_MET_C(NEG) <CW1_SP> <CL1_SP>
	[       PROPERTY W, L
        	W = PERIMETER_INSIDE(CMMC_SP,CW1_SP)
        	L = PERIMETER_INSIDE(CMMC_SP,CL1_SP)
	]
#ELSE
	DEVICE C(MIMCAPS_MM)  CMMC_SP   MMC_C(POS)  SEC_LAST_MET_C(NEG) <CW1_SP> <CL1_SP>
	[       PROPERTY C, W, L
        	Ca = 1e-3         // F/M^2, fF/um^2 = 1e-3F/M^2
		Cf = 7.5e-11      // F/M, fF/um=1e-9F/M
		C = Ca * area(CMMC_SP) + Cf * perimeter_inside(CMMC_SP, SEC_LAST_MET_C)
        	W = PERIMETER_INSIDE(CMMC_SP,CW1_SP)
        	L = PERIMETER_INSIDE(CMMC_SP,CL1_SP)
	]
	TRACE PROPERTY C(MIMCAPS_MM) C C 3
#ENDIF
///////////////////////////////
// PIP Capacitor
///////////////////////////////
#IFDEF PEXRUN
DEVICE PIPCAPS_30F_CIS  PIPCAP_SP   PLY2_C(POS)  PLY_C(NEG) <CPW1_SP> <CPL1_SP>
[       PROPERTY W, L
        W = PERIMETER_INSIDE(PIPCAP_SP,CPW1_SP)
        L = PERIMETER_INSIDE(PIPCAP_SP,CPL1_SP)
]
#ELSE
DEVICE C(PIPCAPS_30F_CIS)  PIPCAP_SP   PLY2_C(POS)  PLY_C(NEG) <CPW1_SP> <CPL1_SP>
[       PROPERTY C, W, L
        Ca = 3.5e-3         // F/M^2, fF/um^2 = 1e-3F/M^2
	Cp = 3.25e-10      // F/M, fF/um=1e-9F/M
        W = PERIMETER_INSIDE(PIPCAP_SP,CPW1_SP)
        L = PERIMETER_INSIDE(PIPCAP_SP,CPL1_SP)
	C = Ca * area(PIPCAP_SP) + Cp * ( L + W ) * 2 
]
TRACE PROPERTY C(PIPCAPS_30F_CIS) C C 5
#ENDIF





